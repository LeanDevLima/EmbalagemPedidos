// <auto-generated />
using EmbalagemPedidos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmbalagemPedidos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601214529_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmbalagemPedidos.Models.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CaixaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DimensoesId")
                        .HasColumnType("int");

                    b.Property<int>("DimensoesId1")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdutosSerializados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Produtos");

                    b.Property<int>("RespostaEmbalagemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DimensoesId");

                    b.HasIndex("DimensoesId1");

                    b.HasIndex("RespostaEmbalagemId");

                    b.ToTable("Caixas");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Dimensoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<int>("Comprimento")
                        .HasColumnType("int");

                    b.Property<int>("Largura")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("Dimensoes");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.RespostaEmbalagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("RespostasEmbalagem");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Caixa", b =>
                {
                    b.HasOne("EmbalagemPedidos.Models.Dimensoes", null)
                        .WithMany()
                        .HasForeignKey("DimensoesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmbalagemPedidos.Models.Dimensoes", "Dimensoes")
                        .WithMany()
                        .HasForeignKey("DimensoesId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmbalagemPedidos.Models.RespostaEmbalagem", null)
                        .WithMany("Caixas")
                        .HasForeignKey("RespostaEmbalagemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dimensoes");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Dimensoes", b =>
                {
                    b.HasOne("EmbalagemPedidos.Models.Produto", null)
                        .WithOne("Dimensoes")
                        .HasForeignKey("EmbalagemPedidos.Models.Dimensoes", "ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Produto", b =>
                {
                    b.HasOne("EmbalagemPedidos.Models.Pedido", null)
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.RespostaEmbalagem", b =>
                {
                    b.HasOne("EmbalagemPedidos.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.Produto", b =>
                {
                    b.Navigation("Dimensoes")
                        .IsRequired();
                });

            modelBuilder.Entity("EmbalagemPedidos.Models.RespostaEmbalagem", b =>
                {
                    b.Navigation("Caixas");
                });
#pragma warning restore 612, 618
        }
    }
}
